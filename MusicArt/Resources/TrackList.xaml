<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:resources="clr-namespace:MusicArt.Resources">

    <!-- Circle Exclamation Point -->
    <DrawingGroup x:Key="CircleExDrawGroup">
        <GeometryDrawing Brush="#22EFEFEF"
                         Geometry="M16,30.5C8.004,30.5,1.5,23.996,1.5,16S8.004,1.5,16,1.5S30.5,8.004,30.5,16S23.996,30.5,16,30.5z" />
        <GeometryDrawing Brush="#FF9ABFFF"
                         Geometry="M16,31C7.729,31,1,24.271,1,16S7.729,1,16,1s15,6.729,15,15S24.271,31,16,31z M16,2.936 C8.796,2.936,2.936,8.796,2.936,16S8.796,29.064,16,29.064S29.064,23.204,29.064,16S23.204,2.936,16,2.936z" />
        <GeometryDrawing Brush="#FF9ABFFF">
            <GeometryDrawing.Geometry>
                <GeometryGroup>
                    <RectangleGeometry Rect="13.661,21.145,4.678,3.743" />
                    <RectangleGeometry Rect="13.661,7.112,4.678,11.227" />
                </GeometryGroup>
            </GeometryDrawing.Geometry>
        </GeometryDrawing>
    </DrawingGroup>
    <DrawingImage x:Key="CircleExDrawingImage"
                  Drawing="{DynamicResource CircleExDrawGroup}" />
    
    <!--No Results-->
    <DrawingImage x:Key="NoResultsDrawingImage">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="#00FFFFFF"
                                 Geometry="F1M16,16L0,16 0,0 16,0z" />
                <GeometryDrawing Brush="#FFF6F6F6"
                                 Geometry="F1M0.9999,-0.000199999999999534L0.9999,15.9998 9.5859,15.9998 10.5359,15.9998 13.5249,15.9998 14.0009,15.9998 14.4749,15.9998 15.9999,14.4748 15.9999,13.5248 14.5049,12.0298 15.9999,10.5348 15.9999,9.5858 14.0009,7.5858 14.0009,4.3788 9.6209,-0.000199999999999534z" />
                <GeometryDrawing Brush="#FF424242"
                                 Geometry="F1M9,2.207L11.793,5 9,5z M3,14L3,2 8,2 8,6 12,6 12,9.525 12.03,9.556 13,8.586 13,4.793 9.207,1 2,1 2,15 8.586,15 7.586,14z" />
                <GeometryDrawing Brush="#FFA1260D"
                                 Geometry="F1M12.0303,10.9699L10.0603,8.9999 9.0003,10.0609 10.9703,12.0299 9.0003,13.9999 10.0603,15.0599 12.0303,13.0909 14.0003,15.0599 15.0603,13.9999 13.0903,12.0299 15.0603,10.0609 14.0003,8.9999z" />
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>
    
    <!-- Check -->
    <DrawingImage x:Key="CheckDrawingImage">
        <DrawingImage.Drawing>
            <GeometryDrawing Brush="#FF8DFF62"
                             Geometry="M11.884,28.952c-0.753,0-1.51-0.247-2.14-0.755L1.272,21.37c-1.468-1.183-1.699-3.331-0.517-4.799 c1.183-1.469,3.332-1.698,4.799-0.517l5.921,4.771L26.019,4.213c1.242-1.418,3.399-1.561,4.816-0.32 c1.418,1.241,1.562,3.398,0.32,4.816L14.454,27.788C13.781,28.557,12.836,28.952,11.884,28.952z" />
        </DrawingImage.Drawing>
    </DrawingImage>

    <Style x:Key="DeadTrackImageStyle"
           TargetType="{x:Type Image}">
        <Setter Property="Source"
                Value="{StaticResource CheckDrawingImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Location}"
                         Value="{x:Null}">
                <Setter Property="Source"
                        Value="{StaticResource CircleExDrawingImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NoArtTrackImageStyle"
           TargetType="{x:Type Image}">
        <Setter Property="Source"
                Value="{StaticResource CheckDrawingImage}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasFolderArt}"
                         Value="False">
                <Setter Property="Source"
                        Value="{StaticResource NoResultsDrawingImage}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Artist Expander Button -->
    <ControlTemplate x:Key="ArtistExpanderButtonTemplate"
                     TargetType="{x:Type ToggleButton}">
        <Border x:Name="ExpanderButtonBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent"
                           Grid.ColumnSpan="2" />
                <!--<Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="{DynamicResource Foreground}"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center" />-->
                <Path x:Name="Arrow"
                      Grid.Column="0"
                      Data="M 1,1.5 L 4.5,5 8,1.5"
                      Stroke="{DynamicResource Foreground}"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <RotateTransform Angle="0" />
                    </Path.RenderTransform>
                </Path>
                <ContentPresenter x:Name="HeaderContent"
                                  Grid.Column="1"
                                  Margin="4,0,0,0"
                                  ContentSource="Content" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!-- Animate arrow when toggled-->
            <Trigger Property="IsChecked"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="-180"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

            <!-- MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver"
                     Value="true">
                <!--<Setter Property="Stroke"
                        Value="#FF3C7FB1"
                        TargetName="Circle" />-->
                <Setter Property="Stroke"
                        Value="#222"
                        TargetName="Arrow" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
                <!--<Setter Property="Stroke"
                        Value="#FF526C7B"
                        TargetName="Circle" />-->
                <!--<Setter Property="StrokeThickness"
                        Value="1.5"
                        TargetName="Circle" />-->
                <Setter Property="Stroke"
                        Value="#FF003366"
                        TargetName="Arrow" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Artist Expander Template-->
    <ControlTemplate x:Key="ArtistExpanderTemplate"
                     TargetType="{x:Type Expander}">
        <DockPanel>
            <ToggleButton x:Name="ExpanderButton"
                          DockPanel.Dock="Top"
                          Template="{StaticResource ArtistExpanderButtonTemplate}"
                          Content="{TemplateBinding Header}"
                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          OverridesDefaultStyle="True"
                          Padding="1.5,0"
                          Cursor="Hand">
            </ToggleButton>
            <ContentPresenter x:Name="ExpanderContent"
                              ContentSource="Content"
                              DockPanel.Dock="Bottom">
                <ContentPresenter.LayoutTransform>
                    <ScaleTransform ScaleY="0" />
                </ContentPresenter.LayoutTransform>
            </ContentPresenter>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="1"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Album Expander Button -->
    <ControlTemplate x:Key="AlbumExpanderButtonTemplate"
                     TargetType="{x:Type ToggleButton}">
        <Border x:Name="ExpanderButtonBorder"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent"
                           Grid.ColumnSpan="2" />
                <Path x:Name="Arrow"
                      Grid.Column="0"
                      Data="M 0,0 L 0,6 5,3 0,0 Z"
                      Stroke="{DynamicResource Foreground}"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                      Fill="#FF666666">
                    <Path.RenderTransform>
                        <RotateTransform Angle="0" />
                    </Path.RenderTransform>
                </Path>
                <ContentPresenter x:Name="HeaderContent"
                                  Grid.Column="1"
                                  Margin="4,0,0,0"
                                  ContentSource="Content" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!-- Animate arrow when toggled-->
            <Trigger Property="IsChecked"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="90"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <!-- MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter TargetName="Arrow"
                        Property="Stroke"
                        Value="#222" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="true">
                <Setter TargetName="Arrow"
                        Property="Stroke"
                        Value="#FF003366" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Album Expander Template-->
    <ControlTemplate x:Key="AlbumExpanderTemplate"
                     TargetType="{x:Type Expander}">
        <DockPanel>
            <ToggleButton x:Name="ExpanderButton"
                          DockPanel.Dock="Top"
                          Template="{StaticResource AlbumExpanderButtonTemplate}"
                          Content="{TemplateBinding Header}"
                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          OverridesDefaultStyle="True"
                          Padding="1.5,0"
                          Cursor="Hand">
            </ToggleButton>
            <ContentPresenter x:Name="ExpanderContent"
                              DockPanel.Dock="Bottom">
                <ContentPresenter.LayoutTransform>
                    <ScaleTransform ScaleY="0" />
                </ContentPresenter.LayoutTransform>
            </ContentPresenter>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded"
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="1"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="ExpanderContent"
                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Artist-->
    <Style x:Key="ArtistStyle"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Margin"
                Value="5,2,5,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="True"
                              BorderBrush="#FF7FA7B9"
                              BorderThickness="0,0,0,1.5"
                              Template="{DynamicResource ArtistExpanderTemplate}">
                        <Expander.Header>
                            <DockPanel Cursor="Hand"
                                       Background="Transparent"
                                       Margin="0,5">
                                <TextBlock FontWeight="Bold"
                                           Text="{Binding Name}"
                                           Margin="5,0" />
                                <TextBlock Text="(" />
                                <TextBlock Text="{Binding ItemCount}" />
                                <TextBlock Text=" songs)" />
                            </DockPanel>
                        </Expander.Header>
                        <ItemsPresenter Margin="15,0,5,5" />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Album-->
    <Style x:Key="AlbumStyle"
           TargetType="{x:Type GroupItem}">
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="True"
                              Template="{DynamicResource AlbumExpanderTemplate}">
                        <Expander.Header>
                            <DockPanel Cursor="Hand"
                                       Background="Transparent"
                                       Margin="0,2">
                                <TextBlock FontWeight="DemiBold"
                                           Text="{Binding Name}"
                                           Margin="5,0" />
                                <TextBlock Text="(" />
                                <TextBlock Text="{Binding ItemCount}" />
                                <TextBlock Text=" songs)" />
                            </DockPanel>
                        </Expander.Header>
                        <ItemsPresenter Margin="30,0,5,5" />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <resources:ArtistAlbumGroupStyleSelector x:Key="StyleSelector"
                                             ArtistTemplate="{StaticResource ArtistStyle}"
                                             AlbumTemplate="{StaticResource AlbumStyle}" />



</ResourceDictionary>
